.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MAT_SVD" "3" "01 August 2006" "" ""

.SH NAME
mat_svd \- computes the SVD of the input matrix
.SH SYNOPSIS
.sp
\fB#include <it/linalg.h>
.sp
vec mat_svd ( mat M, mat U, mat V
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBmat_svd\fR computes the singular value decomposition of the matrix \fIM\fR\&. If singular subspaces are not needed, simply set \fIU\fR and/or \fIV\fR to NULL. If \fIU\fR and/or \fIV\fR are needed, be sure to make proper memory allocation beforehand. 
This function is borrowed from the JAMA Java puyblic-domain package. 
See: http://math.nist.gov/javanumerics/jama/  
.SH "RETURN VALUE"
.PP
vector of singular values
.SH "EXAMPLE"

.nf

#include <linalg.h>

\&...

mat m = mat_new( 3, 3 ); 
mat u = mat_new( 3, 3 ); 
mat v = mat_new( 3, 3 ); 

vec sv; 

m[0][0] = 1;   m[0][1] = 5;   m[0][2] = 2; 
m[1][0] = 2;   m[1][1] = 3;   m[1][2] = 5; 
m[2][0] = 3;   m[2][1] = 7;   m[2][2] = 3; 

sv = mat_svd (m1, u, v); 

/* 
sv = [11.176 3.061 0.848] 
u =  
[[    0.477     0.338    -0.811]
 [    0.498    -0.865    -0.067]
 [    0.724     0.372     0.581]]
v = 
[[    0.326    -0.090     0.941]
 [    0.801     0.555    -0.224]
 [    0.503    -0.827    -0.253]]
*/
.fi
.SH "AUTHOR"
.PP
This manual page was written by Francois Cayre <cayre@inpg.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
