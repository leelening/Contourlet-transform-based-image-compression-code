.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MAT_EIG_SYM" "3" "01 August 2006" "" ""

.SH NAME
mat_eig_sym \- computes eigen decomposition of a symmetrix matrix
.SH SYNOPSIS
.sp
\fB#include <it/linalg.h>
.sp
vec mat_eig_sym ( mat a, mat evec
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBmat_eig_sym\fR performs eigen-decomposition of a real symmetric matrix \fIa\fR\&. Eigenvectors are stored in input matrix \fIevec\fR\&. Make sure to make proper memory allocation beforehand. Eigenvalues are output of the function. 
This function is borrowed from the JAMA Java public-domain package. 
See: http://math.nist.gov/javanumerics/jama/  
.SH "RETURN VALUE"
.PP
vector of eigenvalues
.SH "EXAMPLE"

.nf

#include <linalg.h>

\&...

m1 = mat_new( 3, 3 ); 
mat evec = mat_new (3, 3);
vec eval; 

m1[0][0] = 1;   m1[0][1] = 5;   m1[0][2] = 2; 
m1[1][0] = 5;   m1[1][1] = 3;   m1[1][2] = 5; 
m1[2][0] = 2;   m1[2][1] = 5;   m1[2][2] = 3; 

eval = mat_eig_sym (a, evec);

/*
eval = [10.639189 -3.715090 0.075900]
evec = 
[[0.469034 0.607644 0.640918]
 [0.677681 -0.712979 0.180026]
 [0.566353 0.349900 -0.746200]]
*/
.fi
.SH "AUTHOR"
.PP
This manual page was written by Francois Cayre <cayre@inpg.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
