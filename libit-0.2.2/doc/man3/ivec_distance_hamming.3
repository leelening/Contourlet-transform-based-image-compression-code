.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IVEC_DISTANCE_HAMMING" "3" "01 August 2006" "" ""

.SH NAME
ivec_distance_hamming \- Hamming distance between two sequences
.SH SYNOPSIS
.sp
\fB#include <it/distance.h>
.sp
int ivec_distance_hamming ( ivec v1, ivec v2
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBivec_distance_hamming\fR returns the Hamming distance between two sequences, i.e. the number of positions such that the component of \fIv1\fR is not equal to the one of \fIv2\fR\&. 
The Hamming distance is only defined between two sequences of the same length. In the proposed implementation, the function returns an integer for sequences of different length. This value is computed assuming that the vector \fIv1\fR is the reference. If the sequences are not of the same length, there are two cases: either the sequence \fIv2\fR is shorter than the sequence \fIv1\fR\&. In that case missing symbols are assumed to be in error. If the sequence \fIv2\fR is longer, extra symbols are discarded but do not increase the distance. Hence, if \fIv1\fR is a prefix of \fIv2\fR, then this function returns 0.   
.SH "RETURN VALUE"
.PP
The Hamming distance
.SH "EXAMPLE"

.nf

#include <distance.h>

\&...

ivec v1 = ivec_new_string("0 3 0 1");
ivec v2 = ivec_new_string("0 1 0 2");
/* compute the hamming distance between v1 and v2 */
int distance = ivec_distance_hamming(v1, v2);
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
