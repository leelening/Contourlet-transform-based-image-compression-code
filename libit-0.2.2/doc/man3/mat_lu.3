.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MAT_LU" "3" "01 August 2006" "" ""

.SH NAME
mat_lu \- performs in-place LU decomposition of input matrix
.SH SYNOPSIS
.sp
\fB#include <it/linalg.h>
.sp
double mat_lu ( mat A, ivec piv
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBmat_lu\fR performs LU decomposition such that A = LU, L being lower triangular and U being upper triangular. This function is in-place: matrix \fIA\fR gets overwritten with L and U stored in compact form. We use Doolittle constraint so L is unit lower triangular (it has only ones on the diagonal, which are therefore not stored). Input integer vector \fIpiv\fR must be initialized before calling \fBmat_lu\fR\&. It is used to store the row permutation matrix in compact form. We return the determinant of the matrix.  
.SH "RETURN VALUE"
.PP
determinant of input matrix
.SH "AUTHOR"
.PP
This manual page was written by Francois Cayre <cayre@inpg.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
