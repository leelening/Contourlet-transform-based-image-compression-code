.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IT_CONVOLUTIONAL_CODE_NEW" "3" "01 August 2006" "" ""

.SH NAME
it_convolutional_code_new \- convolutional code constructor
.SH SYNOPSIS
.sp
\fB#include <it/convcode.h>
.sp
void it_convolutional_code_new ( imat generators, int feedback
);
\fR
.SH "DESCRIPTION"
.PP
The \fBit_convolutional_code_new\fR function creates a new convolutional code object from the matrix of generator polynomials \fIgenerators\fR\&. The rate of the code is k:n where k is the number of rows and n is the number of columns in \fIgenerators\fR\&. Each generator polynomial is given as an integer representing the bits to be considered and xored in the shift register.  
.SH "RETURN VALUE"
.PP
The newly allocated convolutional code object
.SH "EXAMPLE"

.nf

#include <convcode.h>

\&...

/* the matrix of generator polynomials */
imat generator = imat_new(1, 2); 

int feedback = 0; /* an optional feedback polynomial for recursive codes */
generator[0][0] = 0133; /* generator polynomial using the C octal notation */
generator[0][1] = 0171;

/* create the convolutional code */
it_convolutional_code_t *code = it_convolutional_code_new(generator, feedback);
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
