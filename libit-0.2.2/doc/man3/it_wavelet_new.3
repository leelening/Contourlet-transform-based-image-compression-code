.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IT_WAVELET_NEW" "3" "01 August 2006" "" ""

.SH NAME
it_wavelet_new \- wavelet transform constructor
.SH SYNOPSIS
.sp
\fB#include <it/wavelet.h>
.sp
void it_wavelet_new ( it_wavelet_lifting_t const *lifting, int level
);
\fR
.SH "DESCRIPTION"
.PP
The \fBit_wavelet_new\fR function creates a new wavelet transform object on \fIlevel\fR levels using lifting steps \fIlifting\fR\&. This object can later be used as an it_transform_t to perform discrete wavelet transform or inverse wavelet transform on a real-valued vector using the \fBit_transform\fR or \fBit_itransform\fR method respectively.
.PP
Creating this transform object and using the \fBit_transform\fR method is prefered to using \fBit_dwt\fR when multiple transform on vectors of the same size are to be done. 
.SH "RETURN VALUE"
.PP
The wavelet transform object
.SH "EXAMPLE"

.nf

#include <wavelet.h>

\&...

it_wavelet_t *wavelet = it_wavelet_new(it_wavelet_lifting_97, 5);
vec v = vec_new_string("[ 0.3 1.5 2.5 ]");
vec vt;
vt = (vec) it_transform(wavelet, (vec) v);
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
