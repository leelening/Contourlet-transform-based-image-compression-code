.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IVEC_NEW_ALLOC" "3" "01 August 2006" "" ""

.SH NAME
ivec_new_alloc \- create a new vector of integers
.SH SYNOPSIS
.sp
\fB#include <it/vec.h>
.sp
ivec ivec_new_alloc ( size_t length, size_t length_max
);
\fR
.SH "DESCRIPTION"
.PP
The  function \fBivec_new_alloc\fR creates a new vector of \fIlength\fR integers represented with the int type. Unlike the function \fBivec_new\fR, the function \fBivec_new_alloc\fR allocates memory for a greater number of elements than the vector length. Hence, the number \fIlength_max\fR gives the size up to which the vector can grow without any memory reallocation. This function allows to avoid to reallocate memory if the vector comes to grow up to the value \fIlength_max\fR\&. This may be useful if the vector is used as a stack. Note however that in most cases the user does not have to care about the real amount of memory allocated for the vector, since the geometric reallocation strategy allows to avoid to introduce additional complexity while modifying the size of a vector.  
.SH "RETURN VALUE"
.PP
The new vector
.SH "EXAMPLE"

.nf

#include <vec.h>

\&...

int i;
int K = 100;
ivec v = ivec_new_alloc(0, K);/* create a new vector of size 0, and
                                  allocate memory for 100 elements */
for( i = 0 ; i < K ; i++ )    /* Add 100 elements in the vector.   */
  ivec_push(v, i);           
ivec_delete(v);               /* free the vector                   */
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
