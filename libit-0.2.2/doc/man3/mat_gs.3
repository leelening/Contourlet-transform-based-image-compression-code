.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MAT_GS" "3" "01 August 2006" "" ""

.SH NAME
mat_gs \- performs Gram-Schmidt orthogonalization of matrix
.SH SYNOPSIS
.sp
\fB#include <it/linalg.h>
.sp
void mat_gs ( mat A
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBmat_gs\fR performs in-place orthogonalization of the columns of the matrix \fIA\fR using the Gram-Schmidt algorithm. When possible (i.e. when #rows > #cols), we automatically performs normalization of the columns.  
.SH "RETURN VALUE"
.PP
void
.SH "EXAMPLE"

.nf

#include <linalg.h>

\&...

int j; 
vec v1, v2; 
mat m1 = mat_new( 3, 3 ); 

m1[0][0] = 1;   m1[0][1] = 5;   m1[0][2] = 2; 
m1[1][0] = 2;   m1[1][1] = 3;   m1[1][2] = 5; 
m1[2][0] = 3;   m1[2][1] = 7;   m1[2][2] = 3; 

mat_gs( m1 ); 

for ( j= 0; j< mat_width(m2); j++ ) {
  v1 = mat_get_col( m1, j ); 
  v2 = mat_get_col( m1, (j+1)%mat_width(m1) ); 

  printf( "<m1(:,%d)|m1(:,%d)>=%e\\tnorm(m1(:,%d))=%e\\n", j, (j+1)%mat_width(m1), vec_inner_product(v1, v2), j, vec_norm(v1, 2.) );

  vec_delete( v1 );
  vec_delete( v2 );
}


/*

<m2(:,0)|m2(:,1)>=1.776357e-15  norm(m2(:,0))=3.741657e+00
<m2(:,1)|m2(:,2)>=-2.275957e-15 norm(m2(:,1))=3.139609e+00
<m2(:,2)|m2(:,0)>=0.000000e+00  norm(m2(:,2))=2.468644e+00

*/
.fi
.SH "AUTHOR"
.PP
This manual page was written by Francois Cayre <cayre@inpg.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
