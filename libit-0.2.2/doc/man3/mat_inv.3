.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "MAT_INV" "3" "01 August 2006" "" ""

.SH NAME
mat_inv \- computes the inverse of the input matrix
.SH SYNOPSIS
.sp
\fB#include <it/linalg.h>
.sp
mat mat_inv ( mat m
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBmat_inv\fR computes the in-place inverse of the matrix \fIm\fR using LU decomposition. If the matrix is singular, the output is set to NULL, otherwise the output is a pointer to the (modified) input matrix.  
.SH "RETURN VALUE"
.PP
NULL is matrix is singular, non-NULL otherwise
.SH "EXAMPLE"

.nf

#include <linalg.h>

\&...

mat m1 = mat_new( 3, 3 ); 

m1[0][0] = 1;   m1[0][1] = 5;   m1[0][2] = 2; 
m1[1][0] = 2;   m1[1][1] = 3;   m1[1][2] = 5; 
m1[2][0] = 3;   m1[2][1] = 7;   m1[2][2] = 3; 

mat_inv (m1); 

/*
m1=
[[   -0.897    -0.034     0.655]
 [    0.310    -0.103    -0.034]
 [    0.172     0.276    -0.241]]
*/
.fi
.SH "AUTHOR"
.PP
This manual page was written by Francois Cayre <cayre@inpg.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
