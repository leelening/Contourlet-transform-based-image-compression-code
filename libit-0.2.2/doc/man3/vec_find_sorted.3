.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "VEC_FIND_SORTED" "3" "01 August 2006" "" ""

.SH NAME
vec_find_sorted \- find the position of a value in a sorted vector
.SH SYNOPSIS
.sp
\fB#include <it/vec.h>
.sp
idx_t vec_find_sorted ( vec v, double val
);
\fR
.SH "DESCRIPTION"
.PP
Assuming that the vector is sorted, the function \fBvec_find_sorted\fR returns a position in the vector \fIv\fR where the value \fIval\fR can be found. If the value \fIval\fR is not in the vector, the function returns the position where is should be inserted to maintain the vector sorted. In particular, is the value \fIval\fR is greater than any element of the vector, the function returns the length of the vector.  
.SH "RETURN VALUE"
.PP
The position in the vector
.SH "EXAMPLE"

.nf

#include <vec.h>

\&...

vec v = vec_new_arithm (1,1, 4);      /* v =[1,2,3,4]   */

idx_t pos = vec_find_sorted (v, 3);   /* pos = 2 */          
pos = vec_find_sorted (v, 2.2);       /* pos = 2 */    
pos = vec_find_sorted (v, -1);        /* pos = 0 */    
pos = vec_find_sorted (v, 5);         /* pos = 4 */    
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
