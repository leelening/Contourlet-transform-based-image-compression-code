.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IMAT_WAV_WRITE" "3" "01 August 2006" "" ""

.SH NAME
imat_wav_write \- Write a wav sound file
.SH SYNOPSIS
.sp
\fB#include <it/io.h>
.sp
void imat_wav_write ( const char* filename, imat m, int srate, int depth
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBimat_wav_write\fR writes a WAV file named \fIfilename\fR from a matrix \fIm\fR representing a multi-channel sound. Each row of this matrix corresponds to a channel in the WAV file. For example, a mono WAV file will be produced froma matrix with one row, whereas a stereo WAV file will be produced from a matrix with two rows. Each row is a vector representing the samples of the sound for each instant. The number of bits used to represent each sample is specified in \fIdepth\fR whereas the sampling frequency is specified in \fIsrate\fR\&.  
.SH "RETURN VALUE"
.PP
None
.SH "EXAMPLE"

.nf

#include <io.h>

\&...

imat m = imat_new(2, 44100);
int i;
/* create a pure A during 1 sec at 44100Hz in stereo */
for(i = 0; i < 44100; i++) {
  m[0][i] = (int) (sin(2*M_PI*440*i / 44100) * 32767); /* channel 0 (left)  */
  m[1][i] = (int) (cos(2*M_PI*440*i / 44100) * 32767); /* channel 1 (right) */
}
imat_wav_write(m, "sound.wav", 44100, 16); /* write the sound */
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
