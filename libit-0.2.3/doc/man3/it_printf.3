.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IT_PRINTF" "3" "01 August 2006" "" ""

.SH NAME
it_printf \- formatted output
.SH SYNOPSIS
.sp
\fB#include <it/io.h>
.sp
void it_printf ( char *fmt, ...
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBit_printf\fR extends the standard C \fBprintf\fR function and provides an output according to the \fIformat\fR string. Being an extension \fBprintf\fR, it supports all its types and modifiers.
.SS "ADDITIONAL FORMAT STRING CONVERSION SPECIFICATION"
.PP
The following extra escape characters can be using to print a vector or a matrix. To output the actual character instead, it must be doubled in the format string.
.TP
\fB$\fR
The following conversion specifier and modifiers apply to
the elements of the vector argument.
.TP
\fB#\fR
The following conversion specifier and modifiers apply to
the elements of the matrix argument.
.SS "ADDITIONAL CONVERSION SPECIFIER"
.TP
\fBz\fR
The \fIcplx\fR argument is output as "a + b * i"
where a and b are the real and imaginary part respectively,
output in floating point decimal notation.
.TP
\fBv\fR
The \fIdouble\fR element in a vector is output in
floating point decimal notation, with a fixed number of decimals.
By default this conversion specifier is equivalent to .3f.
It can be changed with the \fBit_set_vec_default_fmt\fR function.
.TP
\fBm\fR
The \fIdouble\fR element in a matrix is output in
floating point decimal notation, with a fixed number of decimals.
By default this conversion specifier is equivalent to 9.3g.
It can be changed with the \fBit_set_mat_default_fmt\fR function.
.SH "RETURN VALUE"
.PP
None
.SH "EXAMPLE"

.nf

#include <io.h>

\&...

ivec v = ivec_new_ones(10); /* a new vector with elements set to 1 */
it_printf("$d
", v);       /* output the vector */
ivec_delete(v);             /* free the vector */
cmat m = cmat_new_ones(3,4); /* create a new matrix of complex */
it_printf("#z
", m);        /* output the matrix */
cmat_delete(m);              /* free the matrix */
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
