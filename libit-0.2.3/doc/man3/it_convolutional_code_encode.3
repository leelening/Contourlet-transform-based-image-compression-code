.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IT_CONVOLUTIONAL_CODE_ENCODE" "3" "01 August 2006" "" ""

.SH NAME
it_convolutional_code_encode \- convolutional encoding
.SH SYNOPSIS
.sp
\fB#include <it/convcode.h>
.sp
bvec it_convolutional_code_encode ( it_convolutional_code_t *code, bvec b
);
\fR
.SH "DESCRIPTION"
.PP
This function encodes the binary vector \fIb\fR with the convolutional code specified in \fIcode\fR\&.  
.SH "RETURN VALUE"
.PP
The encoded sequence
.SH "EXAMPLE"

.nf

#include <convcode.h>

\&...

/* the matrix of generator polynomials */
imat generator = imat_new(1, 2); 
int feedback = 0; /* an optional feedback polynomial for recursive codes */

generator[0][0] = 0133; /* generator polynomials using the C octal notation */
generator[0][1] = 0171;

/* create the convolutional code */
it_convolutional_code_t *code = it_convolutional_code_new(generator, feedback);

/* some input message */
bvec input = bvec_new_string("0 1 1 0 0 0 1");

/* encode the sequence with the convolutional code */
bvec output = it_cc_encode(code, input);
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
