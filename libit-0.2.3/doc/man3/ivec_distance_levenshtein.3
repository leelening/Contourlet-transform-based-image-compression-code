.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "IVEC_DISTANCE_LEVENSHTEIN" "3" "01 August 2006" "" ""

.SH NAME
ivec_distance_levenshtein \- Levenshtein distance between two sequences
.SH SYNOPSIS
.sp
\fB#include <it/distance.h>
.sp
int ivec_distance_levenshtein ( ivec v1, ivec v2, int cost_ins, int cost_del, int cost_sub
);
\fR
.SH "DESCRIPTION"
.PP
The function \fBivec_distance_levenshtein\fR returns the Levenshtein distance (also called editing distance) between two sequences, i.e. the number of positions such that the component of \fIv1\fR is not equal to the one of \fIv2\fR\&. 
Note that the complexity of this function is proportionnal to the product of length. If the sequence are of the same order of length, this leads to a computing time which is a quadratic function of the length.   
.SH "RETURN VALUE"
.PP
The Levenshtein distance
.SH "EXAMPLE"

.nf

#include <distance.h>

\&...

ivec v1 = ivec_new_string("1 2 3");            /* v1 = [ 1 2 3 ]        */
ivec v2 = ivec_new_string("0 1 2 3");          /* v2 = [ 0 2 2 3 ]      */
/* compute the Levenshtein distance between v1 and v3 (deletion+subst. => 2) */
int distance = ivec_distance_levenshtein(v1, v3, 1, 1, 1);
.fi
.SH "AUTHOR"
.PP
This manual page was written by Herve Jegou <Herve.Jegou@irisa.fr>\&.
Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free
Documentation License, Version 1.1 or any later version
published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts and no Back-Cover Texts.
